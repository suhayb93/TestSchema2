CREATE OR REPLACE NONEDITIONABLE TYPE mdsys.ST_GEOMETRY
                                         AS OBJECT (
  GEOM SDO_GEOMETRY,
  MEMBER FUNCTION GET_SDO_GEOM RETURN SDO_GEOMETRY DETERMINISTIC,
  MEMBER FUNCTION GET_WKB RETURN BLOB DETERMINISTIC,
  MEMBER FUNCTION GET_WKT RETURN CLOB DETERMINISTIC,
  MEMBER FUNCTION ST_CoordDim RETURN SMALLINT DETERMINISTIC,
  MEMBER FUNCTION ST_IsValid RETURN INTEGER DETERMINISTIC,
  MEMBER FUNCTION ST_SRID RETURN INTEGER,
  MEMBER FUNCTION ST_SRID(asrid INTEGER) RETURN ST_Geometry,
  STATIC FUNCTION FROM_WKT(wkt CLOB) RETURN ST_GEOMETRY DETERMINISTIC,
  STATIC FUNCTION FROM_WKT(wkt VARCHAR2) RETURN ST_GEOMETRY DETERMINISTIC,
  STATIC FUNCTION FROM_WKB(wkb BLOB) RETURN ST_GEOMETRY DETERMINISTIC,
  STATIC FUNCTION FROM_WKT(wkt CLOB, asrid INTEGER)
            RETURN ST_GEOMETRY DETERMINISTIC,
  STATIC FUNCTION FROM_WKT(wkt VARCHAR2, asrid INTEGER)
            RETURN ST_GEOMETRY DETERMINISTIC,
  STATIC FUNCTION FROM_WKB(wkb BLOB, asrid INTEGER)
            RETURN ST_GEOMETRY DETERMINISTIC,
  STATIC FUNCTION FROM_SDO_GEOM(ageometry SDO_GEOMETRY)
            RETURN ST_GEOMETRY DETERMINISTIC) NOT FINAL
 
  ALTER TYPE ST_GEOMETRY ADD
  MEMBER FUNCTION ST_IsEmpty RETURN Integer DETERMINISTIC,
  ADD MEMBER FUNCTION ST_Envelope RETURN ST_Geometry DETERMINISTIC,
  ADD MEMBER FUNCTION ST_Boundary RETURN ST_GEOMETRY DETERMINISTIC,
  ADD MEMBER FUNCTION ST_GeometryType RETURN VARCHAR2 DETERMINISTIC,
  ADD MEMBER FUNCTION ST_Buffer(d NUMBER) RETURN ST_Geometry DETERMINISTIC,
  ADD MEMBER FUNCTION ST_Equals(g2 ST_Geometry) RETURN Integer DETERMINISTIC,
  ADD MEMBER FUNCTION ST_SymmetricDifference(g2 ST_Geometry)
              RETURN ST_Geometry DETERMINISTIC,
  ADD MEMBER FUNCTION ST_Distance(g2 ST_Geometry) RETURN NUMBER DETERMINISTIC,
  ADD MEMBER FUNCTION ST_IsSimple RETURN Integer DETERMINISTIC,
  ADD MEMBER FUNCTION ST_Intersects(g2 ST_Geometry)
        RETURN Integer DETERMINISTIC,
  ADD MEMBER FUNCTION ST_Relate(g2 ST_Geometry, PatternMatrix VARCHAR2)
              RETURN Integer DETERMINISTIC,
  ADD MEMBER FUNCTION ST_Dimension RETURN Integer DETERMINISTIC,
  ADD MEMBER FUNCTION ST_Cross(g2 ST_Geometry) RETURN Integer DETERMINISTIC,
  ADD MEMBER FUNCTION ST_Disjoint(g2 ST_Geometry) RETURN Integer DETERMINISTIC,
  ADD MEMBER FUNCTION ST_Touch(g2 ST_Geometry) RETURN Integer DETERMINISTIC,
  ADD MEMBER FUNCTION ST_Within(g2 ST_Geometry) RETURN Integer DETERMINISTIC,
  ADD MEMBER FUNCTION ST_Overlap(g2 ST_Geometry) RETURN Integer DETERMINISTIC,
  ADD MEMBER FUNCTION ST_Contains(g2 ST_Geometry) RETURN Integer DETERMINISTIC,
  ADD MEMBER FUNCTION ST_Intersection(g2 ST_Geometry)
            RETURN ST_Geometry DETERMINISTIC,
  ADD MEMBER FUNCTION ST_Difference(g2 ST_Geometry)
             RETURN ST_Geometry DETERMINISTIC,
  ADD MEMBER FUNCTION ST_Union(g2 ST_Geometry) RETURN ST_Geometry DETERMINISTIC,
  ADD MEMBER FUNCTION ST_ConvexHull RETURN ST_Geometry DETERMINISTIC,
  ADD MEMBER FUNCTION ST_Centroid RETURN ST_Geometry DETERMINISTIC
    CASCADE
 
  ALTER TYPE ST_GEOMETRY
ADD MEMBER FUNCTION ST_SymDifference(g2 ST_Geometry)
              RETURN ST_Geometry DETERMINISTIC,
  ADD MEMBER FUNCTION ST_Touches(g2 ST_Geometry) RETURN Integer DETERMINISTIC,
  ADD MEMBER FUNCTION ST_Crosses(g2 ST_Geometry) RETURN Integer DETERMINISTIC,
  ADD MEMBER FUNCTION ST_GetTolerance RETURN NUMBER DETERMINISTIC
   CASCADE
 
    ALTER TYPE ST_GEOMETRY
      ADD STATIC FUNCTION ST_AsText(ageometry ST_GEOMETRY) RETURN CLOB DETERMINISTIC,
      ADD STATIC FUNCTION ST_AsBinary(ageometry ST_GEOMETRY) RETURN BLOB DETERMINISTIC,
      ADD STATIC FUNCTION ST_GeomFromText(wkt CLOB) RETURN ST_GEOMETRY DETERMINISTIC,
      ADD STATIC FUNCTION ST_GeomFromWKB(wkb BLOB) RETURN ST_GEOMETRY DETERMINISTIC,
      ADD STATIC FUNCTION ST_GeomFromText(wkt CLOB, asrid INTEGER) RETURN ST_GEOMETRY DETERMINISTIC,
      ADD STATIC FUNCTION ST_GeomFromWKB(wkb BLOB, asrid INTEGER) RETURN ST_GEOMETRY DETERMINISTIC
      CASCADE
/
CREATE OR REPLACE TYPE BODY mdsys.ST_GEOMETRY wrapped
a000000
1
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
e
4403 e39
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
/